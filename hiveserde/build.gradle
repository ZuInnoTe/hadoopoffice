

buildscript {
    repositories  {
        maven {
        url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'gradle.plugin.com.github.johnrengelman:shadow:7.1.0'
    }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'jacoco'


compileJava.options.encoding = 'UTF-8'

group = "com.github.zuinnote"
archivesBaseName = "hadoopoffice-hiveserde"
version = "1.6.1"



shadowJar {
   relocate 'org.apache.commons.compress', 'hadoopoffice.shade.org.apache.commons.compress'
     manifest {
        attributes 'Implementation-Title': 'ZuInnoTe - Hadoop Office Analytics Library - Serde', 'Implementation-Version': version
    }

    classifier = ''

    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA' // remove signature digests of other libraries
}


repositories {
    mavenCentral()
    mavenLocal()
    // workaround for certain dependencies of hive-exec
    maven {
    	url "https://conjars.org/repo"
    }

}


jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
    }
}




configurations {
	provided
	integrationTestCompile.extendsFrom testCompile
    	integrationTestRuntime.extendsFrom testRuntime
}

eclipse {

  classpath {
    plusConfigurations += [ configurations.provided ]
  }
}


test {
    testLogging.showStandardStreams = true

    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
  }
    useJUnitPlatform()
}

sourceSets {
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
    integrationTest {
        java {
            compileClasspath += main.output + test.output + configurations.provided
            runtimeClasspath += main.output + test.output + configurations.provided
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }


}



dependencies {

        // hadoopoffice library
   implementation("com.github.zuinnote:hadoopoffice-fileformat:1.6.1") exclude group: 'org.apache.logging.log4j' // exclude log4j2 until fixed
    // hadoop lib for driver
    compileOnly("org.apache.hadoop:hadoop-client:3.3.0")

   // bouncy castle (for signing etc.)
   // for signing and verification of signatures
    compileOnly("org.bouncycastle:bcprov-ext-jdk15on:1.69")
    compileOnly("org.bouncycastle:bcpkix-jdk15on:1.69")
    compileOnly("org.apache.santuario:xmlsec:2.2.3")
    // hive serde API
   compileOnly("org.apache.hive:hive-serde:3.1.2")
   compileOnly("org.apache.hive:hive-exec:3.1.2")
   // log4j2
   compileOnly("org.apache.logging.log4j:log4j-api:2.16.0")
   // test
   // bouncy castle (for signing etc.)
   // for signing and verification of signatures
    testImplementation("org.bouncycastle:bcprov-ext-jdk15on:1.69")
    testImplementation("org.bouncycastle:bcpkix-jdk15on:1.69")
    testImplementation("org.apache.santuario:xmlsec:2.2.3")
    // hive serde API
   testImplementation("org.apache.hive:hive-serde:3.1.2")
   testImplementation("org.apache.hive:hive-exec:3.1.2")
   // log4j2
   testImplementation("org.apache.logging.log4j:log4j-api:2.16.0")
    testImplementation("org.apache.hive:hive-serde:3.1.2")
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.8.1'
	testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.1'
}


publishing {
    publications {
        maven(MavenPublication) {
            groupId 'com.github.zuinnote'
            artifactId 'hadoopoffice-hiveserde'
            version '1.6.1'

            from components.java
        }
    }
}

javadoc.classpath += configurations.provided

task hadoopOfficeJavaDocs(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}


task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives shadowJar, hadoopOfficeJavaDocs, sourcesJar
}
