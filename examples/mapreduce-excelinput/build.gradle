
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
    }
}


apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'jacoco'



mainClassName = "org.zuinnote.hadoop.office.example.driver.Excel2CSVDriver"
compileJava.options.encoding = 'UTF-8'
sourceCompatibility = 1.8
version = '0.1.0'



shadowJar {
   relocate 'org.apache.commons.compress', 'hadoopoffice.shade.org.apache.commons.compress'
     manifest {
       attributes 'Implementation-Title': 'Example - MR job (ExcelInput) for reading Excel files using hadoopoffice', 'Implementation-Version': version
     }
	baseName = 'example-ho-mr-excelinput'
    classifier = ''

    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA' // remove signature digests of other libraries
}


repositories {
    mavenCentral()
    mavenLocal()
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
    }
}


configurations {
	provided
	testProvided
	testIntegrationCompile.extendsFrom testCompile
    testIntegrationRuntime.extendsFrom testRuntime
}

eclipse {

  classpath {
    plusConfigurations += [ configurations.provided ]
    plusConfigurations += [ configurations.testProvided ]
    plusConfigurations += [ configurations.testIntegrationCompile ]
    plusConfigurations += [ configurations.testIntegrationRuntime ]
  }
}

javadoc.classpath += configurations.provided



sourceSets {
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
     testIntegration {
        java {
            compileClasspath += main.output + test.output + configurations.provided
            runtimeClasspath += main.output + test.output + configurations.provided
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}



dependencies {
   // hadoop lib for driver
     provided("org.apache.hadoop:hadoop-client:3.3.0")
     // hadoopoffice library
   compile("com.github.zuinnote:hadoopoffice-fileformat:1.5.0")

       testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.0'

   testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.0'
    testIntegrationRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.0'
    testIntegrationRuntime group: 'org.junit.platform', name: 'junit-platform-console', version: '1.7.0'
     testIntegrationCompile group: 'org.apache.hadoop', name: 'hadoop-minicluster', version: '3.3.0'
}




uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

test {
    testLogging.showStandardStreams = true
    useJUnitPlatform()
}

task testIntegration(type: Test) {
    testClassesDirs = sourceSets.testIntegration.output.classesDirs
    classpath = sourceSets.testIntegration.runtimeClasspath
    useJUnitPlatform()
}

1
2

check.dependsOn testIntegration
testIntegration.mustRunAfter test


artifacts {
    archives shadowJar
}
