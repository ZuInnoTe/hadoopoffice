apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'jacoco'


sourceCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

group = "com.github.zuinnote"
archivesBaseName = "hadoopoffice-fileformat"
version = "1.6.2"
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

jar {
    manifest {
        attributes 'Implementation-Title': 'ZuInnoTe - Hadoop Office Analytics Library - FileFormat', 'Implementation-Version': version
    }
    baseName = 'hadoopoffice-fileformat'
}

repositories {
    mavenCentral()
    mavenLocal()
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
    }
}


configurations {
	provided
}

eclipse {

  classpath {
    plusConfigurations += [ configurations.provided ]
  }
}

sourceSets {
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
}

javadoc.classpath += configurations.provided


task hadoopOfficeJavaDocs(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}


task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}


test {
    systemProperty "java.awt.headless", "true"
    testLogging.showStandardStreams = true
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
		groupId 'com.github.zuinnote'
            artifactId 'hadoopoffice-fileformat'
            version '1.6.2'
            from components.java
        }
    }
}

dependencies {

   // Apache POI (for Excel parsing)
   implementation("org.apache.poi:poi:5.1.0")   exclude group: 'org.apache.logging.log4j' // exclude log4j2 until fixed
   implementation("org.apache.poi:poi-ooxml:5.1.0")   exclude group: 'org.apache.logging.log4j' // exclude log4j2 until fixed
   // for signing and verification of signatures
    compileOnly("org.bouncycastle:bcprov-ext-jdk15on:1.69")
    compileOnly("org.bouncycastle:bcpkix-jdk15on:1.69")
    compileOnly("org.apache.santuario:xmlsec:2.2.3")
   // hadoop libraries
   compileOnly("org.apache.hadoop:hadoop-common:3.3.0")
   compileOnly("org.apache.hadoop:hadoop-mapreduce-client-common:3.3.0")
   // log4j2
   compileOnly("org.apache.logging.log4j:log4j-api:2.17.0")
   // test
   testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.8.1'
   // for signing and verification of signatures
    testImplementation("org.bouncycastle:bcprov-ext-jdk15on:1.69")
    testImplementation("org.bouncycastle:bcpkix-jdk15on:1.69")
    testImplementation("org.apache.santuario:xmlsec:2.2.3")
   // hadoop libraries
   testImplementation("org.apache.hadoop:hadoop-common:3.3.0")
   testImplementation("org.apache.hadoop:hadoop-mapreduce-client-common:3.3.0")
   // log4j2
   testImplementation("org.apache.logging.log4j:log4j-api:2.17.0")
   testRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.8.1'
   testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.1'
}
